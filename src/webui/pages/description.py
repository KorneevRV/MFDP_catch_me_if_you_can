import streamlit as st

import pages.elements as elements

# Блок настроек по умолчанию
elements.set_wide()
elements.create_navbar()
cookie_manager = elements.get_manager()
access_token = cookie_manager.get("access_token")
elements.token_check(access_token)

st.title("Как использовать SalaryScout")

# Описание сервиса
st.write("""
### 1. **Новый запрос**:
- Перейдите на страницу "Новый запрос" в боковом меню.
- Введите название вакансии и описание должностных обязанностей.
- Нажмите кнопку "Отправить запрос".
- Получите прогноз диапазона заработной платы для данной позиции.
""")

st.info("""
Для получения наилучших результатов предоставьте название и описание вакансии,
похожие на информацию, публикуемую в общедоступных источниках. Модель обучена
на таких данных. Избегайте неформальных, слишком коротких описаний и сленговых
названий, так как это может привести к неточным предсказаниям.
""")

st.write("""
### 2. **Интерпретация результатов**:
- После отправки запроса система предоставляет минимальную, среднюю и
  максимальную зарплату.
- Обратите внимание на предупреждения, если они появляются:
  - Для низких зарплат (ниже 150 000 руб.) система предупреждает о высокой
    погрешности предсказания.
  - Для высоких зарплат (выше 600 000 руб.) система предупреждает о возможной
    недооценке.

Исходные данные для модели предсказания зарплат включают:
- Большой объем информации о вакансиях среднего уровня
- Ограниченное количество данных о начальных позициях и высокооплачиваемых
  специалистах и руководящих должностях

Эти особенности данных приводят к разной точности прогнозов для разных уровней:
- Младшие специалисты: Возможна более высокая погрешность из-за разнообразия
  условий.
- Средний уровень: Наиболее точные прогнозы благодаря большому объему данных.
- Старшие специалисты: Возможна недооценка зарплат из-за недостатка информации.
""")

col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    st.image(
        "/webui/pages/image/error distribution.png",
        caption="Иллюстрация распределения ошибок предсказания",
        width=600
    )

st.write("""
Эта картинка демонстрирует пример того, как выглядят результаты предсказания 
и как их следует интерпретировать.

### 3. **История запросов**:
- Перейдите на страницу "История запросов" в боковом меню.
- Просмотрите все ваши предыдущие запросы и их результаты.

### 4. **Выход из аккаунта**:
- Используйте кнопку "Выйти из аккаунта" на этой странице для завершения
  сессии.
""")

# Кнопка выхода из аккаунта
if st.button("Выйти из аккаунта", use_container_width=True):
    cookie_manager.delete("access_token")